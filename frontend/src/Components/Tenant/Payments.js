import { useEffect, useState } from "react";
import jsPDF from "jspdf";
import "jspdf-autotable";
import { API_BASE_URL } from "../../config";

export default function Payments() {
  const [payments, setPayments] = useState([]);
  const [isLoading, setIsLoading] = useState(true);
  const tenantId = localStorage.getItem("userId");

  useEffect(() => {
    if (!tenantId) {
      setIsLoading(false);
      return;
    }

    fetch(`${API_BASE_URL}/api/payment/tenant/${tenantId}`)
      .then((res) => res.json())
      .then((data) => {
        setPayments(data);
        setIsLoading(false);
      })
      .catch((err) => {
        console.error("Failed to fetch payments:", err);
        setIsLoading(false);
      });
  }, [tenantId]);

  if (isLoading) {
    return (
      <div className="flex justify-center items-center min-h-screen bg-[#F9FAFB]">
        <div className="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-sky-500"></div>
      </div>
    );
  }


  function downloadInvoice(payment) {
    const booking = payment.booking || {};
    const doc = new jsPDF();

    doc.setFillColor(248, 250, 252);
    doc.roundedRect(10, 10, 190, 130, 5, 5, 'F');

    doc.setFont('helvetica', 'bold');
    doc.setFontSize(18);
    doc.setTextColor(31, 41, 55);
    doc.text("RentEase Payment Invoice", 20, 25);

    doc.setFontSize(12);
    doc.setFont('helvetica', 'normal');
    doc.setTextColor(55, 65, 81);
    const txIdWrapped = doc.splitTextToSize(`Transaction ID: ${payment.transaction_id}`, 170);
    const lines = [
      `Invoice ID: ${payment.payment_id}`,
      ...txIdWrapped,
      `Status: ${payment.status}`,
      `Amount Paid: ₹${payment.amount}`,
      `Payment Date: ${payment.payment_date}`
    ];
    doc.text(lines, 20, 40);

    doc.setFontSize(14);
    doc.setFont('helvetica', 'bold');
    doc.setTextColor(31, 41, 55);
    doc.text("Booking Details", 20, 95);

    doc.setFontSize(12);
    doc.setFont('helvetica', 'normal');
    doc.setTextColor(55, 65, 81);
    const bookingLines = [
      `Booking ID: ${booking.booking_id || "N/A"}`,
      `Property ID: ${booking.property_id || "N/A"}`,
      `Move-in Date: ${booking.move_in_date || "N/A"}`,
      `Duration: ${booking.duration || "N/A"} months`
    ];
    doc.text(bookingLines, 20, 105);

    doc.setFontSize(10);
    doc.setTextColor(100);
    doc.text("Generated by RentEase", 150, 140);

    doc.save(`invoice_${payment.payment_id}.pdf`);
  }
  if (isLoading) {
    return <div>Loading...</div>;
  }

  if (!tenantId) {
    return <div className="p-4 text-red-500">You must be logged in to view payments.</div>;
  }

  return (
    <div className="p-6 min-h-screen">
      <h1 className="text-3xl font-bold text-gray-800 mb-6 text-center sm:text-left w-full">
        My Payments
      </h1>
      {payments.length === 0 ? (
        <p className="text-gray-600">No payments found.</p>
      ) : (
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {payments.map((p) => (
            <div
              key={p.payment_id}
              className="bg-white shadow-lg rounded-lg p-5 border border-gray-200"
            >
              <h2 className="text-xl font-semibold text-gray-700 mb-2">
                Payment #{p.payment_id}
              </h2>
              <p className="text-sm text-gray-600 mb-1 break-words whitespace-normal">
                <strong>Transaction ID:</strong><br />
                <span className="break-all">{p.transaction_id}</span>
              </p>

              <p className="text-sm text-gray-600 mb-1">
                <strong>Amount:</strong> ₹{p.amount}
              </p>
              <p className="text-sm text-gray-600 mb-1">
                <strong>Status:</strong> {p.status}
              </p>
              <p className="text-sm text-gray-600 mb-4">
                <strong>Payment Date:</strong> {p.payment_date}
              </p>

              <div className="bg-gray-50 rounded-md p-3 mb-4">
                <h3 className="text-md font-medium text-gray-800 mb-1">
                  Booking Details
                </h3>
                <p className="text-sm text-gray-600 mb-1">
                  <strong>Booking ID:</strong> {p.booking?.booking_id || "-"}
                </p>
                <p className="text-sm text-gray-600 mb-1">
                  <strong>Property ID:</strong> {p.booking?.property_id || "-"}
                </p>
                <p className="text-sm text-gray-600 mb-1">
                  <strong>Move-in Date:</strong> {p.booking?.move_in_date || "-"}
                </p>
                <p className="text-sm text-gray-600">
                  <strong>Duration:</strong> {p.booking?.duration || "-"} months
                </p>
              </div>

              <button
                onClick={() => downloadInvoice(p)}
                className="mt-2 w-full bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded text-sm"
              >
                Download PDF Invoice
              </button>
            </div>
          ))}
        </div>
      )}
    </div>
  );
}
